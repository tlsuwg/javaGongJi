package sunshaoqiang.banzi;import java.net.Socket;import java.text.SimpleDateFormat;import java.util.Date;import java.util.LinkedList;import java.util.List;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;public class SomeThreadToLinkServers {	/**	 * 	 * @param args	 */	static String host = "118.145.5.136";	static Integer port = 80;	static Integer size = 1500;		static int threadSize=4;	static List<Socket> list = new LinkedList<Socket>();	static Long last = System.currentTimeMillis();	static ExecutorService  pool= Executors.newFixedThreadPool(threadSize);			public static void main(String[] args) {		// System.out.println(format(new Date()));		for (int i = 1; i <= size; i++) {			//			try {//				Thread.sleep(1L);//			} catch (InterruptedException e1) {//				// TODO Auto-generated catch block//				e1.printStackTrace();//			}			final int l = i;			Thread mt=new Thread(new Runnable() {				@Override				public void run() {					// TODO Auto-generated method stub					Date d = new Date();					Socket socket;					try {						socket = new Socket(host, port);						socket.setSoTimeout(110);						long newTime = d.getTime();						System.out.println(l + "\t" + host + ":" + port								+ "\t isBound:" + socket.isBound() + "\t time:"								+ format(d) + "\t ºÄÊ±:" + (newTime - last));						list.add(socket);						last = newTime;					}  catch (Exception e) {						// TODO Auto-generated catch block						e.printStackTrace();											}				}			});									mt.start();						pool.execute(mt);		}		try {			Thread.sleep(1000 * 3600);		} catch (InterruptedException e) {			e.printStackTrace();		}	}	static String format(Date d) {		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S");		return df.format(d);	}	}